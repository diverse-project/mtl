library ContainmentCommands;

class ToStringDeep extends Navigate
{
	str          : Standard::String;
	toStringCmd  : ContainmentView::Command;
	indentLevel  : Standard::Integer;
	
	/** */
	init (showParent : Standard::Boolean) : ContainmentView::Command
	{
		this.str         := ''; 
		this.toStringCmd := new ContainmentCommands::ToString().init(showParent);
		this.indentLevel := 0;
		return this;
	}	

	/** */
	preExecute (container : ContainmentView::Container)
	{
		if (isNull(str))  { init (true); }

		str := str.concat (getIndent());
		str := str.concat (container.execute(toStringCmd).oclAsType(!Standard::String!));
		str := str.concat ('\n');
		increaseIndent();
	}
	
	/** */
	postExecute (container : ContainmentView::Container) : Standard::OclAny
	{
		decreaseIndent();
		return str;
	}
	
	/** TOTALLY INEFFICIANT !!! */
	getIndent () : Standard::String
	{
		result : Standard::String;
		n      : Standard::Integer;

		result := '';
		n := indentLevel;
		while (n.[>=](0))
		{
			result := result.concat ('    ');
			n := n.[-](1);
		}
		
		return result;
	}
	
	/** */
	increaseIndent ()
	{
		indentLevel := indentLevel.[+](1);
	}
	
	/** */
	decreaseIndent ()
	{
		indentLevel := indentLevel.[-](1);
	}
}