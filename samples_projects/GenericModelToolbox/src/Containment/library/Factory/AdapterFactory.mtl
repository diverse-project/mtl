library Containment;

model theMOF   : RepositoryModel;
model theUML   : RepositoryModel;
model theRDBMS : RepositoryModel;

package Factory
{
	class AdapterFactory
	{
		instance : Containment::View_Container;
		driver : MDRDriver::MDRModelManager;
		
		/** */
		getInstance (kind : Standard::String;  modelPath : Standard::String) : Containment::View_Container
		{
			if (isNull(instance))
			{
				driver := new MDRDriver::MDRModelManager();
				driver.init();
				
				if (kind='MOF')
				{
					theMOF := driver.getModelFromXMI ('../../MetaModels/MOF/MOF_metamodel.xmi', 'Model', modelPath,  modelPath, modelPath.concat('.modified'));
					instance := new Containment::Containment4MOF_Container().init (theMOF.oclAsType(!Standard::RepositoryAPI!));
				}
				elseif (kind='UML')
				{
					theUML := driver.getModelFromXMI ('../../MetaModels/UML/UML_metamodel.xmi', 'UML', modelPath,  modelPath, modelPath.concat('.modified'));
					instance := new Containment::Containment4UML_Container().init (theUML.oclAsType(!Standard::RepositoryAPI!));
				}
				elseif (kind='RDBMS')
				{
					theRDBMS := driver.getModelFromXMI ('../../MetaModels/SimpleRDBMS/SimpleRDBMS_metamodel.xmi', 'SimpleRdbmsMM2', modelPath,  modelPath, modelPath.concat('.modified'));
					instance := new Containment::Containment4SimpleRDBMS_Container().init (theRDBMS.oclAsType(!Standard::RepositoryAPI!));
				}
				else
				{
					'IMPOSSIBLE CASE IN ContainmentFactory::AdapterFactory::getInstance...'.toErr();
					instance := null;
				}
			}
			return instance;
		}
	}
}