<?xml version="1.0" encoding="UTF-8"?>
<project name="org.inria.mtl.plugin" default="build.jars" basedir=".">

	<property name="bootclasspath" value=""/>
	<property name="ws" value="win32"/>
	<property name="os" value="win32"/>
	<property name="arch" value="x86"/>
	<property name="javacFailOnError" value="false"/>
	<property name="javacDebugInfo" value="on"/>
	<property name="javacVerbose" value="true"/>

	<target name="init" depends="properties">
		<property name="plugin" value="org.inria.mtl.plugin"/>
		<property name="version.suffix" value="_1.0.0"/>
		<property name="full.name" value="${plugin}${version.suffix}"/>
		<property name="temp.folder" value="${basedir}/temp.folder"/>
		<property name="plugin.destination" value="${basedir}"/>
		<property name="build.result.folder" value="${basedir}"/>
	</target>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: org.inria.mtl.plugin for an update site.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<zip zipfile="${plugin.destination}/${full.name}.jar" basedir="${temp.folder}/${full.name}" filesonly="false" update="no"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/${full.name}"/>
		<copy file="${build.result.folder}/mtl.jar" todir="${destination.temp.folder}/${full.name}"/>
		<copy todir="${destination.temp.folder}/${full.name}">
			<fileset dir="${basedir}" includes="plugin.xml,plugin.properties,icons/,MTL/,MTL/bin/BasicMTLc.jar,MTL/bin/ThirdParty/log4j/log4j.jar,MTL/bin/ThirdParty/ANTLR/antlrfull.jar,MTL/bin/BasicMTLruntime.jar,	"/>
		</copy>
	</target>

	<target name="mtl.jar" depends="init" unless="mtl.jar" description="Create jar: mtl.jar.">
		<property name="destdir" value="${temp.folder}/mtl.jar.bin"/>
		<delete dir="${temp.folder}/mtl.jar.bin"/>
		<mkdir dir="${temp.folder}/mtl.jar.bin"/>
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/mtl.jar.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bootclasspath}" classpath="../../plugins/org.eclipse.core.boot_2.1.0/bin;../../plugins/org.eclipse.core.boot_2.1.0/boot.jar;MTL/bin/BasicMTLc.jar;MTL/bin/ThirdParty/log4j/log4j.jar;MTL/bin/ThirdParty/ANTLR/antlrfull.jar;MTL/bin/BasicMTLruntime.jar;../../plugins/org.eclipse.core.runtime_2.1.0/bin;../../plugins/org.eclipse.core.runtime_2.1.0/runtime.jar;../../plugins/org.apache.xerces_4.0.7/bin;../../plugins/org.apache.xerces_4.0.7/xmlParserAPIs.jar;../../plugins/org.apache.xerces_4.0.7/xercesImpl.jar;../../plugins/org.eclipse.core.resources_2.1.0/bin;../../plugins/org.eclipse.core.resources_2.1.0/resources.jar;../../plugins/org.eclipse.core.resources.win32_2.1.0/resources.jar;../../plugins/org.eclipse.ui_2.1.0/bin;../../plugins/org.eclipse.ui_2.1.0/ui.jar;../../plugins/org.eclipse.update.core_2.1.0/bin;../../plugins/org.eclipse.update.core_2.1.0/updatecore.jar;../../plugins/org.eclipse.update.core.win32_2.1.0/updatecore.jar;../../plugins/org.eclipse.help_2.1.0/bin;../../plugins/org.eclipse.help_2.1.0/help.jar;../../plugins/org.apache.lucene_1.2.1/bin;../../plugins/org.apache.lucene_1.2.1/parser.jar;../../plugins/org.apache.lucene_1.2.1/lucene-1.2.jar;../../plugins/org.eclipse.help.appserver_2.1.0/bin;../../plugins/org.eclipse.help.appserver_2.1.0/appserver.jar;../../plugins/org.eclipse.swt_2.1.0/bin;../../plugins/org.eclipse.swt_2.1.0/ws/${ws}/swt.jar;../../plugins/org.eclipse.swt.win32_2.1.0/ws/${ws}/swt.jar;../../plugins/org.eclipse.text_2.1.0/bin;../../plugins/org.eclipse.text_2.1.0/text.jar;../../plugins/org.eclipse.jface_2.1.0/bin;../../plugins/org.eclipse.jface_2.1.0/jface.jar;../../plugins/org.eclipse.jface.text_2.1.0/bin;../../plugins/org.eclipse.jface.text_2.1.0/jfacetext.jar;../../plugins/org.eclipse.ui.views_2.1.0/bin;../../plugins/org.eclipse.ui.views_2.1.0/views.jar;../../plugins/org.eclipse.ui.workbench_2.1.0/bin;../../plugins/org.eclipse.ui.workbench_2.1.0/workbench.jar;../../plugins/org.eclipse.ui.win32_2.1.0/bin;../../plugins/org.eclipse.ui.win32_2.1.0/workbenchwin32.jar;../../plugins/org.eclipse.ui.workbench.texteditor_2.1.0/bin;../../plugins/org.eclipse.ui.workbench.texteditor_2.1.0/texteditor.jar;../../plugins/org.eclipse.ui.editors_2.1.0/bin;../../plugins/org.eclipse.ui.editors_2.1.0/editors.jar;../../plugins/org.eclipse.pde.ui_2.1.0/bin;../../plugins/org.eclipse.pde.ui_2.1.0/pdeui.jar;../../plugins/org.eclipse.jdt.ui_2.1.0/bin;../../plugins/org.eclipse.jdt.ui_2.1.0/jdt.jar;../../plugins/org.eclipse.jdt.core_2.1.0/bin;../../plugins/org.eclipse.jdt.core_2.1.0/jdtcore.jar;../../plugins/org.eclipse.ant.core_2.1.0/bin;../../plugins/org.eclipse.ant.core_2.1.0/antsupport.jar;../../plugins/org.eclipse.team.core_2.1.0/bin;../../plugins/org.eclipse.team.core_2.1.0/team.jar;../../plugins/org.eclipse.search_2.1.0/bin;../../plugins/org.eclipse.search_2.1.0/search.jar;../../plugins/org.eclipse.debug.core_2.1.0/bin;../../plugins/org.eclipse.debug.core_2.1.0/dtcore.jar;../../plugins/org.eclipse.debug.ui_2.1.0/bin;../../plugins/org.eclipse.debug.ui_2.1.0/dtui.jar;../../plugins/org.eclipse.jdt.debug_2.1.0/bin;../../plugins/org.eclipse.jdt.debug_2.1.0/jdi.jar;../../plugins/org.eclipse.jdt.debug_2.1.0/jdimodel.jar;../../plugins/org.eclipse.jdt.debug_2.1.0/tools.jar;../../plugins/org.eclipse.jdt.launching_2.1.0/bin;../../plugins/org.eclipse.jdt.launching_2.1.0/launching.jar;../../plugins/org.eclipse.compare_2.1.0/bin;../../plugins/org.eclipse.compare_2.1.0/compare.jar;../../plugins/org.eclipse.update.ui.forms_2.1.0/bin;../../plugins/org.eclipse.update.ui.forms_2.1.0/forms.jar;../../plugins/org.eclipse.pde.build_2.1.0/bin;../../plugins/org.eclipse.pde.build_2.1.0/pdebuild.jar;../../plugins/org.eclipse.pde_2.1.0/bin;../../plugins/org.eclipse.pde_2.1.0/pde.jar;../../plugins/org.eclipse.pde.core_2.1.0/bin;../../plugins/org.eclipse.pde.core_2.1.0/pdecore.jar;../../plugins/org.apache.ant_1.5.1/bin;../../plugins/org.apache.ant_1.5.1/ant.jar;../../plugins/org.apache.ant_1.5.1/optional.jar;../../plugins/org.eclipse.jdt.debug.ui_2.1.0/bin;../../plugins/org.eclipse.jdt.debug.ui_2.1.0/jdiui.jar">
			<src path="src/"/>
		</javac>
		<!-- copy necessary resources -->
		<copy todir="${temp.folder}/mtl.jar.bin">
			<fileset dir="src/" excludes="**/*.java"/>
		</copy>
		<mkdir dir="${build.result.folder}"/>
		<jar jarfile="${build.result.folder}/mtl.jar" basedir="${temp.folder}/mtl.jar.bin"/>
		<delete dir="${temp.folder}/mtl.jar.bin"/>
	</target>

	<target name="mtlsrc.zip" depends="init" unless="mtlsrc.zip">
		<mkdir dir="${build.result.folder}"/>
		<zip zipfile="${build.result.folder}/mtlsrc.zip" filesonly="false" update="no">
			<fileset dir="src/" includes="**/*.java"/>
		</zip>
	</target>

	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: org.inria.mtl.plugin.">
		<available property="mtl.jar" file="${build.result.folder}/mtl.jar"/>
		<antcall target="mtl.jar"/>
	</target>

	<target name="build.sources" depends="init">
		<available property="mtlsrc.zip" file="${build.result.folder}/mtlsrc.zip"/>
		<antcall target="mtlsrc.zip"/>
	</target>

		<target name="build.zips" depends="init">
		</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/${full.name}"/>
		<copy file="${build.result.folder}/mtlsrc.zip" todir="${destination.temp.folder}/${full.name}"/>
		<copy todir="${destination.temp.folder}/${full.name}">
			<fileset dir="${basedir}" includes="src/"/>
		</copy>
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/${full.name}"/>
		<copy file="${temp.folder}/mtl.jar.bin.log" todir="${destination.temp.folder}/${full.name}"/>
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: org.inria.mtl.plugin of all the zips, jars and logs created.">
		<delete file="${build.result.folder}/mtl.jar"/>
		<delete file="${build.result.folder}/mtlsrc.zip"/>
		<delete file="${plugin.destination}/${full.name}.jar"/>
		<delete file="${plugin.destination}/${full.name}.zip"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="refresh" depends="init" if="eclipse.running">
		<eclipse.refreshLocal resource="${plugin}" depth="infinite"/>
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: org.inria.mtl.plugin.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="build.sources"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<delete>
			<fileset dir="${temp.folder}" includes="**/*.bin.log"/>
		</delete>
		<antcall target="zip.folder"/>
		<delete dir="${temp.folder}"/>
	</target>
	<target name="zip.folder" depends="init">
		<zip zipfile="${plugin.destination}/${full.name}.zip" basedir="${temp.folder}" filesonly="true" update="no" excludes="**/*.bin.log"/>
	</target>

</project>
