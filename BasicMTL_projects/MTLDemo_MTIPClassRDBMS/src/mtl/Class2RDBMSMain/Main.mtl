/*
 * $Id: Main.mtl,v 1.2 2005-08-01 15:47:29 dvojtise Exp $
 *
 * Sample of use of associations2attribute with a MDR repository
 */
 
library Class2RDBMSMain;
// no extends for this lib
 
// Lib local model
model source_model : RepositoryModel;		// must be conform to SimpleUML MetaModel
model target_model : RepositoryModel;		// must be conform to RDBMS MetaModel

// Library level methods
// ---------------------
// Typed model 
model Class2RDBMS_lib : Class2RDBMS;

// Library contructors
// -------------------
main(args : Standard::Sequence):Standard::Void 
{
	argsParser 			: ArgumentsParser;
	aSourceModelManager : SourceModelManager;
	aTargetModelManager : TargetModelManager;
	sourceFileName		: Standard::String;
	destFileName		: Standard::String;
	driverName			: Standard::String;
		
	aClass2RDBMSTransfo : Class2RDBMS::Class2RDBMSTransfo;

	// we initialize the arguments parser
	argsParser := new ArgumentsParser ();
	argsParser.init (args);

	
	
	
	// instanciate transformation lib
	Class2RDBMS_lib := new Class2RDBMS();
			
	aSourceModelManager := new SourceModelManager();
	aTargetModelManager := new TargetModelManager();
	sourceFileName := argsParser.getArg();
	destFileName := argsParser.getArg();
	driverName := argsParser.getArg();
	
	'driverName='.concat(driverName).toOut();
	aSourceModelManager.init(driverName);
	aSourceModelManager.loadSourceModel (sourceFileName, null);
	aTargetModelManager.init(driverName);
	aTargetModelManager.loadTargetModel (null, destFileName);
	
		
		// instanciate transformation tool class, and initialize the library models	
	aClass2RDBMSTransfo := new Class2RDBMS_lib::Class2RDBMSTransfo();
	aClass2RDBMSTransfo.initmodel(source_model, target_model);
		// start the transformation
	aClass2RDBMSTransfo.classModelToString().toOut();

    aSourceModelManager.storeSourceModel(); 
	aSourceModelManager.disposeSourceModel();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

