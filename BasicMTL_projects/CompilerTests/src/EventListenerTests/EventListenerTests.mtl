library EventListenerTests;


////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////

class MyAttributeEventListener extends EventManagement::AttributeEventListener
{
//	preNotify (event : EventManagement::Event)
//	{
//		'++++++++++++++++++++ MyAttributeEventListener ++++++++++++++++++++'.toOut();
//	}
	
	postNotify (event : EventManagement::Event)
	{
		theEvent : EventManagement::AttributeEvent;
		theEvent := event.oclAsType (!EventManagement::AttributeEvent!);
		
		'-------------------- MyAttributeEventListener --------------------'.toOut();
		theEvent.getSource().toOut();
		theEvent.getKind().toOut();
		theEvent.getAttributeName().toOut();
		theEvent.getOldValue().toOut();
		theEvent.getNewValue().toOut();
	}
}


////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////

class MyInstanceEventListener extends  EventManagement::InstanceEventListener
{
	preNotify (event : EventManagement::Event)
	{
		'++++++++++++++++++++ MyInstanceEventListener ++++++++++++++++++++'.toOut();
	}

	postNotify (event : EventManagement::Event)
	{
		theEvent : EventManagement::InstanceEvent;
		theEvent := event.oclAsType (!EventManagement::InstanceEvent!);

		'-------------------- MyInstanceEventListener --------------------'.toOut();
		theEvent.getSource().toOut();
		theEvent.getKind().toOut();

		if (theEvent.getKind()='instanceCreate')
		{
			//theEvent.getInstance().toOut();
			new MyAttributeEventListener().connect (theEvent.getInstance());
		}
	}
}


class MyAssociationEventListener extends  EventManagement::AssociationEventListener
{
//	preNotify (event : EventManagement::Event)
//	{
//		'++++++++++++++++++++ MyAssociationEventListener ++++++++++++++++++++'.toOut();
//	}

	postNotify (event : EventManagement::Event)
	{
		theEvent : EventManagement::AssociationEvent;
		theEvent := event.oclAsType (!EventManagement::AssociationEvent!);

		'-------------------- MyAssociationEventListener --------------------'.toOut();
		theEvent.getSource().toOut();
		theEvent.getKind().toOut();
		theEvent.getEndName().toOut();
	}
}

