

library main;


model UML	:	RepositoryModel;
model lib	:	testLib;


main(){

	metaModelFileName	:	Standard::String;
	inputFileName		:	Standard::String;
	outputFileName		:	Standard::String;
	mdrdriver         	: 	MDRDriver::MDRModelManager;

	// we define some filenames 
	metaModelFileName := 'metamodel/UML_metamodel.xmi';
	inputFileName     := 'model/model.xmi';
	outputFileName	  := 'model/model-updated.xmi';
	
	// we initialize the MDR driver		
	mdrdriver := new MDRDriver::MDRModelManager();
	mdrdriver.init();
		 
	// intanciate the model, save result in another file
	UML := mdrdriver.getModelFromXMI (
		metaModelFileName, 
		'UML',			// name of the root package in the Uml1.4 metamodel
		'UML1.4_model', // name of the new model in the repository
		inputFileName,
		outputFileName
	);		
	
	// we instanciate the other library		
	lib := new testLib();
	lib.init (UML);
			
	// we launch the testing method			
	new TestClass().testForeach();
}


class TestClass
{
	testForeach()
	{
		foreach (aClass : UML::Core::Class) in ( lib.getSetOfElement() )
		{
			lib.testMethod(aClass);
		}
	}
}
