<!-- $Id: build.xml,v 1.4 2003-08-12 14:52:43 ffondeme Exp $ -->
<project name="BasicMtlAstJava" default="dist" basedir=".">
	<description>
        Known directories for the BasicMtlAST
	</description>
	<!-- set global properties for this build -->
	<property name="src" location="src"/>
	<property name="srcOfp" location="srcOfp"/>
	<property name="bin" location="bin"/>
	<property name="dist"  location="dist"/>
	
	<!-- This project depends on the Utils project -->
	<property name="Utils"  location="..\Utils"/>

	<target name="init">
    	<!-- Create the time stamp -->
    	<tstamp/>
	    <!-- Create the bin and dist directories -->
	    <mkdir dir="${bin}"/>
	    <mkdir dir="${dist}"/>
	    <mkdir dir="${dist}/bin"/>
	    
	    <!-- This project depends on the Utils project -->
	    <echo>Building the "Utils" project.</echo>
	    <ant antfile="${Utils}\build.xml" dir="${Utils}" target="dist" inheritAll="false"/>
	    <echo>"Utils" project built.</echo>
	</target>

	<target name="compile_java" depends="init"
        description="compile the source " >
    	<!-- Compile the java code from ${src} and ${srcOfp} into ${bin} -->
	    <javac srcdir="${src};${srcOfp}" 
    	    destdir="${bin}"
   			classpath=".;${Utils}\bin"/>
	</target>
  	<target name="full_javadoc" 
  		description="create a full javadoc document that describes all the classes of the project">
	    <javadoc destdir="docs\javadoc" access="private" use="true"
            notree="false" nonavbar="false" noindex="false"
            splitindex="true" author="true" version="true"
            nodeprecatedlist="false" nodeprecated="false"
            packagenames="ASTTopDownVisitor,org.irisa.triskell.MT.BasicMTL.BasicMTLAST.Java"
            classpath="bin" doctitle="Basic MTL ASTJava internal Documentation">
            <link href="http://www.junit.org/junit/javadoc/3.8.1/index.htm"/>
            
    		<sourcepath>
	    		<dirset dir="">
	        		<include name="src/**"/>
	        		<include name="srcOfp/**"/>
	      		</dirset>
            </sourcepath>
        </javadoc>
	</target>
	<target name="create_jar" depends="compile_java"
		description="create the jar file">
		<jar destfile="${dist}/bin/${ant.project.name}.jar">
			<!-- files to include in the jar -->
			<fileset dir="${bin}"/>
			<!-- manifest to include -->
		    <manifest>
		    	<attribute name="Built-By" value="${user.name}"/>   
		    	<attribute name="Main-Class" value="ASTTopDownVisitor.topDownVisitor"/>
				<attribute name="Class-Path" value="Utils.jar"/>
		    	<section name="${ant.project.name}">
		      		<attribute name="Specification-Title" value="${ant.project.name}"/>
      				<attribute name="Specification-Version" value="${TSTAMP} ${TODAY}"/>
      				<attribute name="Specification-Vendor" value="Irisa/Triskell"/>
      				<attribute name="Implementation-Title" value="common"/>
      				<attribute name="Implementation-Version" value="${TSTAMP} ${TODAY}"/> 
      				<attribute name="Implementation-Vendor" value="Irisa/Triskell"/>
    			</section>
		    </manifest>
		</jar>
	</target>
	
	<target name="dist" depends="create_jar"
		description="create a distibution">
		<mkdir dir="${dist}"/>
		<!-- This project depends on the Utils project -->
		<copy todir="${dist}/bin">
			<fileset dir="${Utils}\dist\bin"/>
		</copy>
		
		<!-- There is no need of junit and log4j ; non need of ThirdParty-->
		<!--delete dir="${dist}/bin/ThirdParty/JUnit"/>
		<delete dir="${dist}/bin/ThirdParty/log4j"/-->
		<delete dir="${dist}/bin/ThirdParty"/>
	</target>
	<target name="redist" depends="clean" description="clean then dist">
		<antcall target="dist"/>    
	</target>
  	<target name="clean_srcOfp"
  		description="before a simple Obecjeteering generation it is sometime easier to remove all generated java files but leave the CVS directories">
  		<delete >
  			<fileset dir="srcOfp" casesensitive="yes">
  				<include name="**/*.java"/>
			</fileset>
  		</delete>
  	</target>

  	<target name="clean"
        description="clean up" >
    	<!-- Delete the {$bin} and ${dist} directory trees -->
    	<delete dir="${bin}"/>    
      	<delete dir="${dist}"/> 
  	</target>

  	<target name="deep_clean" depends="clean"
        description="deep clean up (including depending projects)" >
	    
	    <!-- This project depends on the Utils project -->
	    <ant antfile="${Utils}\build.xml" dir="${Utils}" target="deep_clean" inheritAll="false"/>
    </target>
</project>
