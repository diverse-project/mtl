// $Id: While.mtl,v 1.1 2003-10-14 15:56:21 jpthibau Exp $
// part of the BasicMtlASTView Library ( view on ASTJava )
/* version written for basicmtl.g,v 1.2
 *	(cf /udd/triskell/cvsroot/dev/MT/BasicMtlAntlr/ANTLRParser/basicmtl.g,v 1.2)
 */
 
 library BasicMtlASTView;
 
 class While extends Instruction {
 
	condition : Expression;
	body : Standard::OrderedSet;
 
	appendBody(instr : Instruction) : Standard::Void
	{	if isNull(body)
			{ JavaCode [BMTL_body=new BMTLOrderedSet()]; }
		body := body.append(instr).oclAsType(!Standard::OrderedSet!);
	}

	toASTJava() : ASTJava::Object
	{
	anInstruction : Instruction;
	instructions : Standard::Iterator;
	properties : Standard::Iterator;
	aProperty : Property;
//	lineNumber : Standard::String;
	JavaCode [org.irisa.triskell.MT.BasicMTL.BasicMTLAST.Java.While theWhile=new org.irisa.triskell.MT.BasicMTL.BasicMTLAST.Java.While((org.irisa.triskell.MT.BasicMTL.BasicMTLAST.Java.Expression)BMTL_condition.BMTL_toASTJava())];
	instructions := body.getNewIterator();
	instructions.start();
	while instructions.isOn() {
		anInstruction := instructions.item().oclAsType(!Instruction!);
		JavaCode [theWhile.appendBody((org.irisa.triskell.MT.BasicMTL.BasicMTLAST.Java.Instruction)BMTL_anInstruction.BMTL_toASTJava())];
		instructions.next();
	}
	properties := self.oclAsType(!ASTNode!).decoration.getNewIterator();
	properties.start();
	while properties.isOn() {
		aProperty := properties.item().oclAsType(!Property!);
		JavaCode [theWhile.appendDecoration((org.irisa.triskell.MT.visitors.Java.AnalysingVisitor.Property)BMTL_aProperty.BMTL_toASTJava())];
		properties.next();
	}
/*	lineNumber := self.oclAsType(!ASTNode!).getProperty('lineNumber').value;
	JavaCode [theWhile.createNewProperty("LineNumber",BMTL_lineNumber.getTheString(),"StringTag")];*/
	JavaCode [return theWhile];
	}
 }