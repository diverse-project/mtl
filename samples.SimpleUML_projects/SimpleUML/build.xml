<!-- $Id: build.xml,v 1.1 2003-11-03 12:44:20 dvojtise Exp $ -->
<project name="SimpleUML_Transformations" default="run SimpleUML_Transformations" basedir=".">
	<description>
        Sample Build file for using the BasicMTL compiler
	</description>
	<!-- set global properties for this build -->
	<property name="src" location="src"/>
	<property name="base" location="."/>
	<property name="bin" location="bin"/>
	<property name="build" location="build"/>
	<!-- indicate here the location of the BasicMTLCompiler on your configuration -->	
	<!-- <property name="MTLcompiler.jar.path" location="../bin"/>
	<property name="MTLcompiler.Runtime.path" location="../Runtime"/> -->	
	<property name="MTLcompiler.jar.path" location="../BasicMtl2Java/PureJava/dist/bin"/>
	<property name="MTLcompiler.Runtime.path" location="../BasicMtl2Java/PureJava/dist/Runtime"/>
	
	<!-- classpath for compiling and running MTL file -->
	<path id="MTLcompiler.class.path">
    	<pathelement path="${java.class.path}/"/>
    	<pathelement path="."/>
    	<pathelement path="${MTLcompiler.jar.path}\MTDataTypes.jar"/>
    	<pathelement path="${MTLcompiler.jar.path}\BasicMTLRuntime.jar"/>
    	<pathelement path="${MTLcompiler.jar.path}\RepositoryAPI.jar"/>
    	<pathelement path="${MTLcompiler.jar.path}\MDRDriver.jar"/>
    	<pathelement path="${MTLcompiler.jar.path}\Utils.jar"/>
    	<pathelement path="${MTLcompiler.jar.path}\Thirdparty\ANTLR\antlrfull.jar"/>
    	<pathelement path="${MTLcompiler.jar.path}\Thirdparty\log4j\log4j.jar"/>
    <!--	<pathelement path="${MTLcompiler.jar.path}\bin"/> -->
  	</path>
	
	
	<!-- tools -->
	<property name="ANTLR2TLL" location="${MTLcompiler.jar.path}/TLLTypeChecker.jar"/>
	<property name="CodeGenerator" location="${MTLcompiler.jar.path}/BasicMtlJavaCodeGenerator.jar"/>

	<target name="init">
    	<!-- Create the time stamp -->
    	<tstamp/>
	    <!-- Create the build directory structure used by compile -->
    	<mkdir dir="${build}"/>
	    <mkdir dir="${build}/src"/>
	    <mkdir dir="${build}/src/UncheckedTLL"/>
	    <mkdir dir="${build}/src/TLL"/>
	    <mkdir dir="${build}/src/java"/>
	    <mkdir dir="${bin}"/>
	</target>		  	
  	  	
  	<!-- SimpleUML_Transformations -->  
  	<target name="generate_SimpleUML_Transformations" depends="init">
  		
  		<!-- external dependencies -->
  		<ant antfile="CommonBuild.xml" target="compile Standard and MDRDriver"/>
  		<!-- do the job -->
  		<ant antfile="CommonBuild.xml" target="Lazy_MTL2Java" inheritAll="true">
  			<property name="mtlsrcfile" value="${src}\SimpleUML_Transformations.mtl" />  
  			<property name="packagename" value="SimpleUML_Transformations" /> 
  			<property name="libname" value="SimpleUML_Transformations" /> 
  		</ant>
  	</target>
  	<target name="compile_SimpleUML_Transformations_generated_code" 
  			depends="generate_SimpleUML_Transformations">
  		<description>
  			compile the generated Java Code
  		</description>
  		<javac srcdir="${build}/src/java/SimpleUML_Transformations" 
    	    destdir="${bin}"
   			debug="true">
   			<classpath refid="MTLcompiler.class.path"/>
   		</javac>
  	</target>
  		<!-- Run -->
  	<target name="run SimpleUML_Transformations" depends="compile_SimpleUML_Transformations_generated_code">
  		<description>
  			run the generated Java Code
  		</description>
  		<java classname="SimpleUML_Transformations.BMTLLib_SimpleUML_5fTransformations" fork="true">
  			<arg value="-v"/>
   			<classpath >
   				<pathelement path="${bin}"/>
   				<pathelement path="${bin}SimpleUML_Transformations"/>
   				<path refid="MTLcompiler.class.path"/>
   			</classpath>
   		</java>
  	</target>  		

</project>
