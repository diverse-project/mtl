<!-- $Id: outOfEclipsebuild.xml,v 1.4 2004-10-19 09:21:52 jpthibau Exp $ -->
<!-- to make this build script work you need to add antlrfull.jar in the windows>preferences>ant>runtime -->
<project name="ModFactDriver" default="dist" basedir=".">
	<description>
        An adaptor of the RepositoryAPI API to the MDR tool.
	</description>
	<!-- set global properties for this build -->
	<property name="modfact"  location="ThirdParty/ModFact/v1_0_0"/>
	<property name="srcMTL" location="srcMTL"/>
	<property name="src" location="src"/>
	<property name="bin" location="bin"/>
	<property name="dist"  location="dist"/>
	<property name="modfact.jars.src"  location="${modfact}/JMI1_0.jar;${modfact}/ModFactJmi.jar;${modfact}/ow_monolog.jar;${modfact}/ow_utils_commandline.jar;"/>
	<property name="modfact.jars.dest"  location="${dist}/bin/JMI1_0.jar;${dist}/bin/ModFactJmi.jar;${dist}/bin/ow_monolog.jar;${dist}/bin/ow_utils_commandline.jar;"/>
	
	<!-- This project depends on the RepositoryAPI project -->
	<property name="RepositoryAPI"  location="..\RepositoryAPI"/>
	<!-- This project deeply depends on the MTDataTypes and Utils project -->
	<property name="MTDataTypes"  location="..\MTDataTypes"/>
	<property name="Utils"  location="..\Utils"/>
	<property name="BasicMtlRuntime"  location="..\org.inria.BasicMTL.runtime"/>
	<property name="ANTLR2JavaCode" location="..\BasicMtl2Java\LibAssociation\dist\bin\BasicMTLc.jar"/>
	<property name="BasicMtlTLLs" location="..\BasicMtl2Java\LibAssociation\dist\Runtime\src\TLL"/>

	<target name="init">
    	<!-- Create the time stamp -->
    	<tstamp/>
	    <!-- Create the build directory structure used by compile -->
	    <mkdir dir="${bin}"/>
	    <mkdir dir="${dist}"/>
	    <mkdir dir="${dist}/bin"/>
	    
	    <!-- This project depends on the RepositoryAPI project -->
<!--	    <echo>Building the "RepositoryAPI" project.</echo>
	    <ant antfile="${RepositoryAPI}\build.xml" dir="${RepositoryAPI}" target="dist" inheritAll="false"/>
	    <echo>"RepositoryAPI" project built.</echo> -->
	</target>

	<target name="compile_mtl" depends="init"
        description="compile the mtl driver manager" >
	    <ant antfile="${srcMTL}/ModFactDriver/build.xml" dir="${srcMTL}/ModFactDriver/" target="compile_mtl" inheritAll="false"/>
		</target>

	<target name="compile_java" depends="compile_mtl"
        description="compile the source " >
    	<!-- Compile the java code from ${src},${srcOfp} into ${bin} -->
<!--	    <javac srcdir="${src}"
    	    destdir="${bin}"
   			classpath=".;${modfact.jars.src};${RepositoryAPI}\bin;${MTDataTypes}\bin;${Utils}\bin;${Utils}\ThirdParty\junit\junit.jar;${Utils}\ThirdParty\log4j\log4j.jar"
   			debug="true"/> -->
	    <javac srcdir="${src}"
    	    destdir="${bin}"
   			classpath=".;${modfact.jars.src};${BasicMtlRuntime}\runtime.jar;..\Utils\ThirdParty\junit\junit.jar;..\Utils\ThirdParty\log4j\log4j.jar"
   			debug="true"/>
	</target>
  	<target name="full_javadoc" 
  		description="create a full javadoc document that describes all the classes of the project">
	    <javadoc destdir="docs\javadoc" access="private" use="true"
            notree="false" nonavbar="false" noindex="false"
            splitindex="true" author="true" version="true"
            nodeprecatedlist="false" nodeprecated="false"
            sourcepath="src"
            classpath="bin;${modfact.jars.src};{RepositoryAPI}\bin;${MTDataTypes}\bin;${Utils}\bin;..\Utils\ThirdParty\junit\junit.jar;..\Utils\ThirdParty\log4j\log4j.jar" doctitle="Data Types internal Documentation">
            <link href="http://www.junit.org/junit/javadoc/3.8.1/index.htm"/>
            <link href="file:/T:/Soft/multiplatform/Java_lib/log4j/jakarta-log4j-1.2.8/docs/api/"/>
        </javadoc>
	</target>
	<target name="create_jar" depends="compile_java"
		description="create the jar file">
		<jar destfile="${dist}/bin/${ant.project.name}.jar">
			<!-- files to include in the jar -->
			<fileset dir="${bin}"/>
			<!-- manifest to include -->
		    <manifest>
		    	<attribute name="Built-By" value="${user.name}"/>  
				<attribute name="Class-Path" value="RepositoryAPI.jar MTDataTypes.jar Utils.jar ThirdParty/log4j/log4j.jar ThirdParty/junit/junit.jar ThirdParty/ModFact/v1_0_0/JMI1_0.jar ThirdParty/ModFact/v1_0_0/JMIEngine.jar ThirdParty/ModFact/v1_0_0/JMIRepository.jar ThirdParty/ModFact/v1_0_0/ow_monolog.jar ThirdParty/ModFact/v1_0_0/ow_utils_commandline.jar "/>
		    	<section name="${ant.project.name}">
		      		<attribute name="Specification-Title" value="${ant.project.name}"/>
      				<attribute name="Specification-Version" value="${TSTAMP} ${TODAY}"/>
      				<attribute name="Specification-Vendor" value="ObjectWeb/ModFact"/>
      				<attribute name="Implementation-Title" value="common"/>
      				<attribute name="Implementation-Version" value="${TSTAMP} ${TODAY}"/> 
      				<attribute name="Implementation-Vendor" value="ObjectWeb/ModFact"/>
    			</section>
		    </manifest>
		</jar>
	</target>
	<target name="dist" depends="create_jar"
		description="create a distibution">
		<mkdir dir="${dist}"/>
		<!-- This project depends on the RepositoryAPI project -->
		<copy todir="${dist}/bin">
			<fileset dir="${RepositoryAPI}\dist\bin"/>
		</copy>
		
		
		<copy todir="${dist}/bin/ThirdParty/ModFact/v1_0_0">
			<fileset dir="${modfact}"/>
		</copy>
		<copy todir="${dist}/bin/ThirdParty/ModFact/Test/models">
			<fileset dir="ThirdParty/ModFact/Test/models"/>
		</copy>
	    <copy file="log4j_configuration.xml"
	    	todir="${dist}/bin/"
	    	overwrite="true"/>
	    	
	    	
		<mkdir dir="${dist}/test"/>
	    <!--<junit fork="on" printsummary="on" haltonfailure="on" haltonerror="on" dir="${dist}/bin" newenvironment="true" showoutput="false">
	    	<classpath>
			    <pathelement location="${dist}/bin/${ant.project.name}.jar"/>
			    <pathelement location="${dist}/bin/RepositoryAPI.jar"/>
			    <pathelement location="${dist}/bin/MTDataTypes.jar"/>
			    <pathelement location="${dist}/bin/Utils.jar"/>
			    <pathelement path="${modfact.jars.dest}"/>
			    <pathelement path="${classpath}"/>
			</classpath>
			<formatter type="plain"/>
	    	<test outfile="dist/test/report" name="org.irisa.triskell.MT.repository.ModFact.Java.Test.JUnitAdapter"/>
	    </junit>-->
		<delete dir="${dist}/bin/ThirdParty/ModFact/Test"/>
	</target>
  	<target name="clean"
        description="clean up" >
    	<!-- Delete the {$bin} and ${dist} directory trees -->
    	<delete dir="${bin}"/>
    	<delete dir="${dist}"/> 
  	</target>

  	<target name="deep_clean" depends="clean"
        description="deep clean up (including depending projects)" >
	    
	    <!-- This project depends on the RepositoryAPI project -->
	    <ant antfile="${RepositoryAPI}\build.xml" dir="${RepositoryAPI}" target="deep_clean" inheritAll="false"/>
    </target>
</project>
