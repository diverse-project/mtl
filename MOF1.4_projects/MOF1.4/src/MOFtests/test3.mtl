/******************************************************************************
 * $Id: test3.mtl,v 1.2 2004-03-17 15:37:32 edrezen Exp $
 ******************************************************************************/

library MOFtests;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

model UML : RepositoryModel;


class Test3
{
	driver : MDRDriver::MDRModelManager;
	root : UML::Model_Management::Model;
	
	/** */
	init ()
	{
		// we initialize the metamodel 
		UML := getDriver().getModelFromXMI (
			'./Models/UML/UML_model.xmi', 
			'UML',
			'uml', 
			null,
			'toto.xmi' 
		);
	}

	/** */
	execute ()
	{
		topLevelPackagesIterator : Standard::Iterator;
		aPackage                 : MOFview::Package;
		visitor                  : MOFvisitors::MOF2UMLVisitor;
		tool : UMLutils::UMLhelper;

		// we initialize the uml utils
    	tool := new UMLutils::UMLhelper  ();
	    tool.init (UML);

		// we create a visitor 
		visitor := new MOFvisitors::MOF2UMLVisitor ();
		visitor.init (UML,tool);

	    // we create the Model element
	    root := tool.createModel ('MyModel');
		
		// we get the top level packages
		topLevelPackagesIterator := helper.getTopLevelPackages().getNewIterator();
		topLevelPackagesIterator.start ();
		while (topLevelPackagesIterator.isOn())
		{
			aPackage := topLevelPackagesIterator.item().oclAsType(!MOFview::Package!);
			aPackage.accept (visitor, null);			
			topLevelPackagesIterator.next ();
		}
	}
	
	/** */	
	getDriver () : MDRDriver::MDRModelManager
	{
		if (isNull(driver))
		{
			driver := new MDRDriver::MDRModelManager();
			driver.init();
		}
		return driver;
	}
	
}
